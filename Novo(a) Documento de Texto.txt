# 4All_OS - Modular and Sovereign OS for All

## Vis√£o Geral

O **4All_OS** √© um sistema operacional modular e soberano, com foco em **colabora√ß√£o aberta** e **tecnologia inclusiva**. Este projeto visa transformar a forma como sistemas operacionais s√£o desenvolvidos, com a colabora√ß√£o de desenvolvedores ao redor do mundo. O sistema √© projetado para ser **modular**, permitindo que diferentes componentes sejam integrados ou trocados, conforme as necessidades da institui√ß√£o ou do usu√°rio final.

## Objetivos do Projeto

- **Modularidade**: O 4All_OS ser√° composto de m√≥dulos independentes, como um kernel b√°sico, drivers, gerenciamento de arquivos e uma interface gr√°fica.
- **Soberania Digital**: Foco em fornecer um sistema operacional com c√≥digo aberto, sem depend√™ncia de grandes corpora√ß√µes.
- **Colabora√ß√£o Global**: Todos s√£o bem-vindos para contribuir, incluindo desenvolvedores de diferentes pa√≠ses (inclusive China, EUA, e Europa).
- **Tecnologia Escal√°vel**: O projeto ser√° desenvolvido de maneira a permitir a escalabilidade em diversas plataformas e arquiteturas.

## Como Contribuir

1. **Fork o reposit√≥rio** e crie uma branch para suas modifica√ß√µes.
2. Realize as modifica√ß√µes e escreva testes para garantir a qualidade.
3. Envie um Pull Request com uma descri√ß√£o clara das mudan√ßas.

Para mais detalhes sobre como contribuir, veja o arquivo [contributing.md](docs/contributing.md).

## Licen√ßa

Este projeto √© licenciado sob a [MPL-2.0](LICENSE).

## Contato

Para d√∫vidas ou discuss√µes, entre em contato via e-mail: **admin.4allos@proton.me**

---

### üî® **Arquivo contributing.md** (Guia de Contribui√ß√£o)

#### Caminho: `4All_OS/docs/contributing.md`

```markdown
# Guia de Contribui√ß√£o

O 4All_OS √© um projeto de c√≥digo aberto que depende de contribui√ß√µes de toda a comunidade para prosperar. Se voc√™ est√° interessado em contribuir, siga este guia para garantir que sua contribui√ß√£o seja √∫til para o projeto.

## Como Contribuir

1. **Fork o Reposit√≥rio**: Fa√ßa um fork do reposit√≥rio para sua conta GitHub e crie uma branch para suas modifica√ß√µes.
2. **Fa√ßa as Altera√ß√µes**: Implemente a funcionalidade ou corre√ß√£o que deseja adicionar. Certifique-se de que seu c√≥digo segue as diretrizes de estilo do projeto.
3. **Testes**: Sempre escreva testes para suas altera√ß√µes. Isso ajuda a manter a qualidade do c√≥digo.
4. **Envie o Pull Request**: Fa√ßa um pull request de sua branch para a branch principal do reposit√≥rio.

## Diretrizes de C√≥digo

- Utilize **coment√°rios claros** e **explique seu racioc√≠nio** no c√≥digo.
- Os arquivos devem ser **modulares** e bem documentados.
- Testes de unidade s√£o altamente recomendados para todas as novas funcionalidades.

## Licenciamento

Este projeto √© licenciado sob a [MPL-2.0](../LICENSE), o que significa que voc√™ pode us√°-lo livremente, mas com algumas restri√ß√µes (principalmente se voc√™ modificar e redistribuir o c√≥digo).

Se voc√™ n√£o tiver certeza sobre como contribuir, entre em contato com a equipe do 4All_OS via **admin.4allos@proton.me**.

---

### üßë‚Äçüíª **Arquivo principal do Kernel (Exemplo de C√≥digo de C)**

#### Caminho: `4All_OS/src/kernel/main_kernel.c`

Este arquivo cont√©m a inicializa√ß√£o do kernel. Ele configura o sistema b√°sico do sistema operacional, como gerenciamento de mem√≥ria e inicializa√ß√£o de processos.

```c
#include "memory_manager.h"
#include "process_manager.h"
#include <stdio.h>

// Fun√ß√£o principal de inicializa√ß√£o do Kernel
void kernel_init() {
    printf("Inicializando o kernel...\n");

    // Inicializa o gerenciador de mem√≥ria
    init_memory_manager();

    // Inicializa o gerenciador de processos
    init_process_manager();

    // Exibe mensagem de sucesso
    printf("Kernel iniciado com sucesso.\n");
}

int main() {
    kernel_init();

    // Aqui iniciamos o sistema operacional (m√≥dulos adicionais)
    return 0;
}
