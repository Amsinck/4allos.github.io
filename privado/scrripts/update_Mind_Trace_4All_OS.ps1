<#
.SYNOPSIS
    Atualiza a √°rvore de diret√≥rios do 4All_OS a partir do GitHub e mant√©m o m√≥dulo Mind Trace sincronizado.

.DESCRIPTION
    Este script profissional verifica a integridade do reposit√≥rio local, realiza backup opcional, sincroniza com o reposit√≥rio remoto e exibe o log das altera√ß√µes.
    Ele foi projetado para ser integrado diretamente ao sistema operacional 4All_OS.

.NOTES
    Desenvolvido para o sistema 4All_OS por Fernando
    √öltima atualiza√ß√£o: 2025-04-14
#>

# Configura√ß√µes principais
$repoPath = "C:\Users\Fernando\Documents\4All_OS"
$repoURL = "https://github.com/SEU_USUARIO/4All_OS.git"  # Substitua com o URL real do seu reposit√≥rio
$backupPath = "$repoPath\_backup_$(Get-Date -Format 'yyyy-MM-dd_HHmmss')"
$mindTracePath = "$repoPath\modules\mind_trace.py"

Write-Host "üöÄ Iniciando atualiza√ß√£o do sistema 4All_OS..." -ForegroundColor Cyan

# Verifica√ß√£o do reposit√≥rio
if (!(Test-Path $repoPath)) {
    Write-Host "‚ùå Reposit√≥rio n√£o encontrado em $repoPath. Deseja clonar? (s/n)" -ForegroundColor Yellow
    $resposta = Read-Host
    if ($resposta -eq "s") {
        git clone $repoURL $repoPath
        Write-Host "‚úÖ Reposit√≥rio clonado com sucesso!" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è Atualiza√ß√£o cancelada." -ForegroundColor DarkYellow
        exit
    }
}

# Backup opcional
Write-Host "üíæ Deseja criar backup do estado atual? (s/n)" -ForegroundColor Gray
$backup = Read-Host
if ($backup -eq "s") {
    Copy-Item -Path $repoPath -Destination $backupPath -Recurse
    Write-Host "‚úÖ Backup criado em: $backupPath" -ForegroundColor Green
}

# Acessar o reposit√≥rio
Set-Location $repoPath

# Verificar se h√° modifica√ß√µes locais
$changes = git status --porcelain
if ($changes) {
    Write-Host "‚ö†Ô∏è H√° modifica√ß√µes locais n√£o comitadas." -ForegroundColor Yellow
    Write-Host $changes
    Write-Host "Deseja continuar mesmo assim? (s/n)" -ForegroundColor Yellow
    $res = Read-Host
    if ($res -ne "s") {
        Write-Host "üõë Atualiza√ß√£o abortada para preservar suas altera√ß√µes." -ForegroundColor Red
        exit
    }
}

# Atualizar a √°rvore (pull)
Write-Host "üîÅ Atualizando reposit√≥rio via git pull..." -ForegroundColor Cyan
git pull

# Verificar m√≥dulo Mind Trace
if (Test-Path $mindTracePath) {
    Write-Host "‚úÖ M√≥dulo Mind Trace localizado." -ForegroundColor Green
} else {
    Write-Host "‚ùå M√≥dulo Mind Trace n√£o encontrado. Deseja baix√°-lo novamente? (s/n)" -ForegroundColor Red
    $mindRes = Read-Host
    if ($mindRes -eq "s") {
        Invoke-WebRequest -Uri "https://raw.githubusercontent.com/SEU_USUARIO/4All_OS/main/modules/mind_trace.py" -OutFile $mindTracePath
        Write-Host "üì• Mind Trace restaurado com sucesso." -ForegroundColor Green
    }
}

# Mostrar o log das √∫ltimas atualiza√ß√µes
Write-Host "üìÑ √öltimas altera√ß√µes no reposit√≥rio:" -ForegroundColor Cyan
git log -5 --oneline

Write-Host "‚úÖ Atualiza√ß√£o conclu√≠da com sucesso!" -ForegroundColor Green
